name: Release Pull Request
on:
  pull_request:
    types: [opened, edited, reopened, synchronize]
jobs:
  report-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Get PR details on push
        if: ${{ github.event_name == 'push' }}
        run: >-
          echo "SHA=${{ github.sha }}" >> $GITHUB_ENV;
          echo "PR_URL=$(gh pr view --json url --jq '.url')" >> $GITHUB_ENV;
          echo "$(gh pr view --json body --jq '.body')" > pr-body.md
        env:
          # token used to fetch PR details with the github CLI `gh pr view`
          GITHUB_TOKEN: ${{ github.token }}

      - name: Report commit to Ultralight
        id: report-commit
        uses: ultralightlabs/ultralight-github-action@v1.3.8-canary.0
        with:
          ultralight-api-key: ${{secrets.ULTRALIGHT_GH_ACTION_SECRET_KEY}}
          command: REPORT_COMMIT
      - if: ${{ steps.report-commit.outputs.merge-allowed == 'true' }}
        name: Set status to success
        run: |
          echo "::success::This pull request can be merged."
          echo '${{ steps.report-commit.outputs.report-commit-data }}' | jq '.updatedSoftwarePartVersions'
          echo '${{ steps.report-commit.outputs.report-commit-data }}' | jq '.mergeAllowed.details'
      - if: ${{ steps.report-commit.outputs.merge-allowed != 'true' }}
        name: Set status to waiting and add annotation with full details
        run: |
          echo "::error::This pull request cannot be merged yet."
          echo '${{ steps.report-commit.outputs.report-commit-data }}' | jq '.updatedSoftwarePartVersions'
          echo '${{ steps.report-commit.outputs.report-commit-data }}' | jq '.mergeAllowed.details.releases.releasesWithErrors[].errors[]'
          exit 1
